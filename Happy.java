import java.util.HashSet;
import java.lang.Math; 

/** Tests if a given number is a happy number or not
  * @author Alizishaan Khatri
  */
class Happy{

   //Field to store count of the number of steps
   private static int steps;
   
   /** Tests if a given number is a happy number
     * @param number Enter the number to be tested
	 * @return true,if number is a happy number<br>Otherwise, false.
     */
   public static boolean happy(long number){
       long m = 0;
       steps=0;									//Initialize step counter
       int digit = 0;
	   
	   //Create HashSet to store the intermediate values 
       HashSet<Long> cycle = new HashSet<Long>();
       
	   //Loop until the number is reduced to unity or cycle starts repeating
	   while(number != 1 && cycle.add(number)){
           m = 0;
		   
		   //increment step counter
          steps++;
		  
		  //Calculate sum of squares of digits 
           while(number > 0){
               digit = (int)(number % 10);
               m += digit*digit;
               number /= 10;
           }
		   
		  //update value of 'number' variable
           number = m;
       }
       return(number == 1);
   }
   
   /** Returns the number of intermediate numbers generated while testing 'happy numbers'
     * @param none
	 * @return The number of intermediate numbers generated by the 'happy(long)' method
     */
   public int getSteps(){
		return steps;
   }
   
 
}
